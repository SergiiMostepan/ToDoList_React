{"version":3,"sources":["components/TaskEditor/TaskEditor.module.css","components/TaskList/TaskList.module.css","components/TaskFilter/TaskFilter.module.css","components/Task/Task.module.css","components/PrioritySelector/PrioritySelector.js","utils/Priority.js","components/TaskEditor/TaskEditor.js","components/Task/Task.js","components/TaskList/TaskList.js","components/TaskFilter/TaskFilter.js","components/LocalStorage/LocalStorage.js","components/App.js","index.js"],"names":["module","exports","PrioritySelector","options","value","onChange","name","map","option","key","Object","freeze","LOW","NORMAL","HIGH","values","Priority","TaskEditor","state","text","priority","hendleChange","e","setState","target","hendleSubmit","preventDefault","props","onAddTask","this","className","styles","form","onSubmit","input","type","placeholder","label","Component","Task","id","completed","onDeleteTask","onUpdateCompleted","onUpdatePriority","task","actions","onClick","checked","TaskList","items","length","list","item","TaskFilter","onChangeFilter","serializedState","localStorage","getItem","undefined","JSON","parse","err","console","error","stringify","setItem","containerStyles","maxWidth","minWidth","marginLeft","marginRight","App","tasks","filter","changeFilter","addTask","toAddTask","shortid","generate","deleteTask","updateCompleted","updatePriority","tasksFromLS","localStorageLoader","prevProps","prevState","filteredTasks","toLowerCase","includes","taskFilter","style","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ea67969f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskEditor_form__j51XM\",\"label\":\"TaskEditor_label__DCgRE\",\"input\":\"TaskEditor_input__31xJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TaskList_list__RtG_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TaskFilter_input__PUZOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1hEbz\",\"lowPriority\":\"Task_lowPriority__UiOjF\",\"normalPriority\":\"Task_normalPriority__SDqOS\",\"highPriority\":\"Task_highPriority__2hytn\",\"text\":\"Task_text__mdBmo\",\"actions\":\"Task_actions__21T0M\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrioritySelector = ({ options, value, onChange }) => (\r\n  <select name=\"priority\" value={value} onChange={onChange}>\r\n    {options.map(option => (\r\n      <option key={option} value={option}>\r\n        {option}\r\n      </option>\r\n    ))}\r\n  </select>\r\n);\r\n\r\nPrioritySelector.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PrioritySelector;\r\n","export default Object.freeze({\r\n    LOW: 'low',\r\n    NORMAL: 'normal',\r\n    HIGH: 'high',\r\n});","import React, {\r\n  Component\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TaskEditor.module.css';\r\nimport PrioritySelector from '../PrioritySelector/PrioritySelector';\r\nimport Priority from '../../utils/Priority';\r\n\r\nconst options = Object.values(Priority);\r\nexport default class TaskEditor extends Component {\r\n  static propTypes = {\r\n    onAddTask: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    text: '',\r\n    priority: Priority.NORMAL,\r\n  };\r\n\r\n  hendleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddTask({\r\n      ...this.state,\r\n    });\r\n    this.setState({\r\n      text: '',\r\n      priority: Priority.NORMAL,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      text,\r\n      priority\r\n    } = this.state;\r\n    return ( <\r\n      form className = {\r\n        styles.form\r\n      }\r\n      onSubmit = {\r\n        this.hendleSubmit\r\n      } >\r\n      <\r\n      input className = {\r\n        styles.input\r\n      }\r\n      type = \"text\"\r\n      value = {\r\n        text\r\n      }\r\n      onChange = {\r\n        this.hendleChange\r\n      }\r\n      name = \"text\"\r\n      placeholder = \"Enter taskcontent...\" /\r\n      >\r\n      <\r\n      label className = {\r\n        styles.label\r\n      } >\r\n      Select task priority:\r\n      <\r\n      PrioritySelector options = {\r\n        options\r\n      }\r\n      value = {\r\n        priority\r\n      }\r\n      onChange = {\r\n        this.hendleChange\r\n      }\r\n      /> <\r\n      /label> <\r\n      button type = \"submit\" > Create < /button> <\r\n      /form>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Task.module.css';\r\nimport PrioritySelector from '../PrioritySelector/PrioritySelector';\r\nimport Priority from '../../utils/Priority';\r\n\r\nconst options = Object.values(Priority);\r\n\r\nconst Task = ({\r\n  id,\r\n  text,\r\n  priority,\r\n  completed,\r\n  onDeleteTask,\r\n  onUpdateCompleted,\r\n  onUpdatePriority,\r\n}) => (\r\n  <div className={`${styles.task} ${styles[`${priority}Priority`]}`}>\r\n    <p className={styles.text}> {text} </p> <hr />\r\n    <div className={styles.actions}>\r\n      <button type=\"button\" onClick={onDeleteTask}>\r\n        Delete\r\n      </button>\r\n      <PrioritySelector\r\n        options={options}\r\n        value={priority}\r\n        onChange={e => onUpdatePriority(id, e.target.value)}\r\n      />\r\n      <label>\r\n        Completed:\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n          onChange={onUpdateCompleted}\r\n        />\r\n      </label>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nTask.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  priority: PropTypes.string.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  onDeleteTask: PropTypes.func.isRequired,\r\n  onUpdateCompleted: PropTypes.func.isRequired,\r\n  onUpdatePriority: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Task from '../Task/Task';\r\nimport styles from './TaskList.module.css';\r\n\r\nconst TaskList = ({\r\n  items,\r\n  onDeleteTask,\r\n  onUpdateCompleted,\r\n  onUpdatePriority,\r\n}) =>\r\n  items.length > 0 && (\r\n    <ul className={styles.list}>\r\n      {items.map(item => (\r\n        <li key={item.id}>\r\n          <Task\r\n            {...item}\r\n            onDeleteTask={() => onDeleteTask(item.id)}\r\n            onUpdateCompleted={() => onUpdateCompleted(item.id)}\r\n            onUpdatePriority={onUpdatePriority}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\nTaskList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteTask: PropTypes.func.isRequired,\r\n  onUpdateCompleted: PropTypes.func.isRequired,\r\n  onUpdatePriority: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport styles from './TaskFilter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TaskFilter = ({ value, onChangeFilter }) => (\r\n  <input\r\n    type=\"text\"\r\n    className={styles.input}\r\n    value={value}\r\n    onChange={onChangeFilter}\r\n    placeholder=\"Type to filter tasks...\"\r\n  />\r\n);\r\n\r\nTaskFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default TaskFilter;\r\n","const load = key => {\r\n  try {\r\n    const serializedState = localStorage.getItem(key);\r\n\r\n    return serializedState === null ? undefined : JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.error('Get state error: ', err);\r\n  }\r\n};\r\n\r\nconst save = (key, value) => {\r\n  try {\r\n    const serializedState = JSON.stringify(value);\r\n    localStorage.setItem(key, serializedState);\r\n  } catch (err) {\r\n    console.error('Set state error: ', err);\r\n  }\r\n};\r\n\r\nexport default { load, save };\r\n","import React, { Component } from 'react';\r\nimport 'normalize.css';\r\nimport shortid from 'shortid';\r\nimport TaskEditor from './TaskEditor/TaskEditor';\r\nimport TaskList from './TaskList/TaskList';\r\nimport TaskFilter from './TaskFilter/TaskFilter';\r\nimport localStorageLoader from './LocalStorage/LocalStorage';\r\n\r\nconst containerStyles = {\r\n  maxWidth: 1200,\r\n  minWidth: 800,\r\n  marginLeft: 'auto',\r\n  marginRight: 'auto',\r\n};\r\n\r\nconst taskFilter = (tasks, filter) =>\r\n  tasks.filter(task => task.text.toLowerCase().includes(filter.toLowerCase()));\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    tasks: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const tasksFromLS = localStorageLoader.load('tasks');\r\n    if (tasksFromLS) {\r\n      this.setState({\r\n        tasks: tasksFromLS,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.tasks !== this.state.tasks)\r\n      localStorageLoader.save('tasks', this.state.tasks);\r\n  }\r\n\r\n  changeFilter = e => {\r\n    this.setState({\r\n      filter: e.target.value,\r\n    });\r\n  };\r\n\r\n  addTask = task => {\r\n    const toAddTask = {\r\n      ...task,\r\n      id: shortid.generate(),\r\n      completed: false,\r\n    };\r\n    this.setState(state => ({\r\n      tasks: [...state.tasks, toAddTask],\r\n    }));\r\n  };\r\n\r\n  deleteTask = id => {\r\n    this.setState(state => ({\r\n      tasks: state.tasks.filter(task => task.id !== id),\r\n    }));\r\n  };\r\n\r\n  updateCompleted = id => {\r\n    this.setState(state => ({\r\n      tasks: state.tasks.map(task =>\r\n        task.id === id\r\n          ? {\r\n              ...task,\r\n              completed: !task.completed,\r\n            }\r\n          : task,\r\n      ),\r\n    }));\r\n  };\r\n\r\n  updatePriority = (id, priority) => {\r\n    this.setState(state => ({\r\n      tasks: state.tasks.map(task =>\r\n        task.id === id\r\n          ? {\r\n              ...task,\r\n              priority: priority,\r\n            }\r\n          : task,\r\n      ),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { tasks, filter } = this.state;\r\n    const filteredTasks = taskFilter(tasks, filter);\r\n    return (\r\n      <div style={containerStyles}>\r\n        <TaskEditor onAddTask={this.addTask} /> <hr />\r\n        <TaskFilter value={filter} onChangeFilter={this.changeFilter} />\r\n        <TaskList\r\n          items={filteredTasks}\r\n          onDeleteTask={this.deleteTask}\r\n          onUpdateCompleted={this.updateCompleted}\r\n          onUpdatePriority={this.updatePriority}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <Fragment>\n    <App />\n  </Fragment>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}